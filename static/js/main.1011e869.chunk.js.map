{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","clickCount","id","alt","name","src","image","occupation","location","Wrapper","children","Title","App","state","friends","score","finalScore","finishGame","setState","console","log","this","forEach","friend","count","alert","find","i","y","sort","Math","random","map","key","chosen","Component","ReactDOM","render","document","getElementById"],"mappings":"6gFAwBeA,G,MArBI,SAAAC,GAAK,OACtB,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MAC1D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnC,yBAAKP,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMM,MAEhC,4BACE,+CADF,IACgCN,EAAMS,YAEtC,4BACE,6CADF,IAC8BT,EAAMU,e,MCV7BC,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCG1BC,MAJf,SAAeb,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMY,W,OCqFvBE,E,2MAjFbC,MAAQ,CACNC,UACAC,MAAO,EACPC,WAAY,G,EAGdC,WAAa,WAYX,OAXI,EAAKJ,MAAME,MAAQ,EAAKF,MAAMG,YAChC,EAAKE,SAAS,CAAEF,WAAY,EAAKH,MAAME,QAAS,WAC9CI,QAAQC,IAAIC,KAAKR,MAAMG,YACvBK,KAAKH,SAAS,CAAEH,MAAO,OAG3B,EAAKF,MAAMC,QAAQQ,SAAQ,SAAAC,GACzBA,EAAOC,MAAQ,KAEjBC,MAAM,aACN,EAAKP,SAAS,CAAEH,MAAO,KAChB,G,EAGTd,WAAa,SAAAC,GACX,EAAKW,MAAMC,QAAQY,MAAK,SAACC,EAAGC,GAC1B,GAAID,EAAEzB,KAAOA,EAAI,CACf,GAAyB,IAArBY,EAAQc,GAAGJ,MAOb,OANAV,EAAQc,GAAGJ,MAAQV,EAAQc,GAAGJ,MAAQ,EACtC,EAAKN,SAAS,CAAEH,MAAO,EAAKF,MAAME,MAAQ,IAAK,WAC7CI,QAAQC,IAAIC,KAAKR,MAAME,UAEzB,EAAKF,MAAMC,QAAQe,MAAK,kBAAMC,KAAKC,SAAW,OAEvC,EAEP,EAAKd,kB,wEAsBH,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,qBAEA,wBAAIlB,UAAU,eAAd,iBAA2CsB,KAAKR,MAAME,OACrDM,KAAKR,MAAMC,QAAQkB,KAAI,SAAAT,GAAM,aAC5B,kBAAC,GAAD,GACEtB,WAAY,EAAKA,WACjBC,GAAIqB,EAAOrB,GACX+B,IAAKV,EAAOrB,GACZI,MAAOiB,EAAOjB,OAJhB,mBAKMiB,EAAOrB,IALb,oBAMOqB,EAAOrB,IANd,qBAOQqB,EAAOnB,MAPf,sBAQSmB,EAAOjB,OARhB,2BASciB,EAAOhB,YATrB,yBAUYgB,EAAOf,UAVnB,uBAWUe,EAAOW,QAXjB,Y,GAhEQC,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1011e869.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst FriendCard = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n    <div className=\"content\">\n      <ul>\n        <li>\n          <strong>Name:</strong> {props.name}\n        </li>\n        <li>\n          <strong>Occupation:</strong> {props.occupation}\n        </li>\n        <li>\n          <strong>Location:</strong> {props.location}\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    finalScore: 0\n  };\n\n  finishGame = () => {\n    if (this.state.score > this.state.finalScore) {\n      this.setState({ finalScore: this.state.score }, function() {\n        console.log(this.state.finalScore);\n        this.setState({ score: 0 });\n      });\n    }\n    this.state.friends.forEach(friend => {\n      friend.count = 0;\n    });\n    alert(`Game Over`);\n    this.setState({ score: 0 });\n    return true;\n  };\n\n  clickCount = id => {\n    this.state.friends.find((i, y) => {\n      if (i.id === id) {\n        if (friends[y].count === 0) {\n          friends[y].count = friends[y].count + 1;\n          this.setState({ score: this.state.score + 1 }, function() {\n            console.log(this.state.score);\n          });\n          this.state.friends.sort(() => Math.random() - 0.5);\n\n          return true;\n        } else {\n          this.finishGame();\n        }\n      }\n    });\n  };\n\n  // shuffleFriends = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const friends = this.state.friends.sort(() => Math.random() - 0.5);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends });\n  // };\n\n  // chooseFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const friends = this.state.friends.sort(() => Math.random() - 0.5);\n\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends });\n  // };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n\n        <h1 className=\"text-center\">Your score is {this.state.score}</h1>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            clickCount={this.clickCount}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n            chosen={friend.chosen}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}